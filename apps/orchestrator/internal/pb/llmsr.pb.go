// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: pb/llmsr.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a program with its skeleton and score, used as input for Propose.
type Program struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skeleton      string                 `protobuf:"bytes,1,opt,name=skeleton,proto3" json:"skeleton,omitempty"`
	Score         float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Program) Reset() {
	*x = Program{}
	mi := &file_pb_llmsr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Program) ProtoMessage() {}

func (x *Program) ProtoReflect() protoreflect.Message {
	mi := &file_pb_llmsr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Program.ProtoReflect.Descriptor instead.
func (*Program) Descriptor() ([]byte, []int) {
	return file_pb_llmsr_proto_rawDescGZIP(), []int{0}
}

func (x *Program) GetSkeleton() string {
	if x != nil {
		return x.Skeleton
	}
	return ""
}

func (x *Program) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// The request message for the Propose RPC.
type ProposeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parents       []*Program             `protobuf:"bytes,1,rep,name=parents,proto3" json:"parents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeRequest) Reset() {
	*x = ProposeRequest{}
	mi := &file_pb_llmsr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeRequest) ProtoMessage() {}

func (x *ProposeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_llmsr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeRequest.ProtoReflect.Descriptor instead.
func (*ProposeRequest) Descriptor() ([]byte, []int) {
	return file_pb_llmsr_proto_rawDescGZIP(), []int{1}
}

func (x *ProposeRequest) GetParents() []*Program {
	if x != nil {
		return x.Parents
	}
	return nil
}

// The response message for the Propose RPC.
type ProposeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skeletons     []string               `protobuf:"bytes,1,rep,name=skeletons,proto3" json:"skeletons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeResponse) Reset() {
	*x = ProposeResponse{}
	mi := &file_pb_llmsr_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeResponse) ProtoMessage() {}

func (x *ProposeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_llmsr_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeResponse.ProtoReflect.Descriptor instead.
func (*ProposeResponse) Descriptor() ([]byte, []int) {
	return file_pb_llmsr_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeResponse) GetSkeletons() []string {
	if x != nil {
		return x.Skeletons
	}
	return nil
}

// The request message for the Observe RPC.
type ObserveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skeleton      string                 `protobuf:"bytes,1,opt,name=skeleton,proto3" json:"skeleton,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveRequest) Reset() {
	*x = ObserveRequest{}
	mi := &file_pb_llmsr_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveRequest) ProtoMessage() {}

func (x *ObserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_llmsr_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveRequest.ProtoReflect.Descriptor instead.
func (*ObserveRequest) Descriptor() ([]byte, []int) {
	return file_pb_llmsr_proto_rawDescGZIP(), []int{3}
}

func (x *ObserveRequest) GetSkeleton() string {
	if x != nil {
		return x.Skeleton
	}
	return ""
}

// The response message for the Observe RPC.
type ObserveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The original skeleton from the request, to associate the score correctly.
	Skeleton      string  `protobuf:"bytes,1,opt,name=skeleton,proto3" json:"skeleton,omitempty"`
	Score         float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveResponse) Reset() {
	*x = ObserveResponse{}
	mi := &file_pb_llmsr_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveResponse) ProtoMessage() {}

func (x *ObserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_llmsr_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveResponse.ProtoReflect.Descriptor instead.
func (*ObserveResponse) Descriptor() ([]byte, []int) {
	return file_pb_llmsr_proto_rawDescGZIP(), []int{4}
}

func (x *ObserveResponse) GetSkeleton() string {
	if x != nil {
		return x.Skeleton
	}
	return ""
}

func (x *ObserveResponse) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_pb_llmsr_proto protoreflect.FileDescriptor

const file_pb_llmsr_proto_rawDesc = "" +
	"\n" +
	"\x0epb/llmsr.proto\x12\x0fllmsr_worker.pb\";\n" +
	"\aProgram\x12\x1a\n" +
	"\bskeleton\x18\x01 \x01(\tR\bskeleton\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\"D\n" +
	"\x0eProposeRequest\x122\n" +
	"\aparents\x18\x01 \x03(\v2\x18.llmsr_worker.pb.ProgramR\aparents\"/\n" +
	"\x0fProposeResponse\x12\x1c\n" +
	"\tskeletons\x18\x01 \x03(\tR\tskeletons\",\n" +
	"\x0eObserveRequest\x12\x1a\n" +
	"\bskeleton\x18\x01 \x01(\tR\bskeleton\"C\n" +
	"\x0fObserveResponse\x12\x1a\n" +
	"\bskeleton\x18\x01 \x01(\tR\bskeleton\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score2\xa7\x01\n" +
	"\x05LLMSR\x12N\n" +
	"\apropose\x12\x1f.llmsr_worker.pb.ProposeRequest\x1a .llmsr_worker.pb.ProposeResponse\"\x00\x12N\n" +
	"\aobserve\x12\x1f.llmsr_worker.pb.ObserveRequest\x1a .llmsr_worker.pb.ObserveResponse\"\x00B(Z&mictlan/orchestrator/internal/pb;pbb\x06proto3"

var (
	file_pb_llmsr_proto_rawDescOnce sync.Once
	file_pb_llmsr_proto_rawDescData []byte
)

func file_pb_llmsr_proto_rawDescGZIP() []byte {
	file_pb_llmsr_proto_rawDescOnce.Do(func() {
		file_pb_llmsr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_llmsr_proto_rawDesc), len(file_pb_llmsr_proto_rawDesc)))
	})
	return file_pb_llmsr_proto_rawDescData
}

var file_pb_llmsr_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_llmsr_proto_goTypes = []any{
	(*Program)(nil),         // 0: llmsr_worker.pb.Program
	(*ProposeRequest)(nil),  // 1: llmsr_worker.pb.ProposeRequest
	(*ProposeResponse)(nil), // 2: llmsr_worker.pb.ProposeResponse
	(*ObserveRequest)(nil),  // 3: llmsr_worker.pb.ObserveRequest
	(*ObserveResponse)(nil), // 4: llmsr_worker.pb.ObserveResponse
}
var file_pb_llmsr_proto_depIdxs = []int32{
	0, // 0: llmsr_worker.pb.ProposeRequest.parents:type_name -> llmsr_worker.pb.Program
	1, // 1: llmsr_worker.pb.LLMSR.propose:input_type -> llmsr_worker.pb.ProposeRequest
	3, // 2: llmsr_worker.pb.LLMSR.observe:input_type -> llmsr_worker.pb.ObserveRequest
	2, // 3: llmsr_worker.pb.LLMSR.propose:output_type -> llmsr_worker.pb.ProposeResponse
	4, // 4: llmsr_worker.pb.LLMSR.observe:output_type -> llmsr_worker.pb.ObserveResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_llmsr_proto_init() }
func file_pb_llmsr_proto_init() {
	if File_pb_llmsr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_llmsr_proto_rawDesc), len(file_pb_llmsr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_llmsr_proto_goTypes,
		DependencyIndexes: file_pb_llmsr_proto_depIdxs,
		MessageInfos:      file_pb_llmsr_proto_msgTypes,
	}.Build()
	File_pb_llmsr_proto = out.File
	file_pb_llmsr_proto_goTypes = nil
	file_pb_llmsr_proto_depIdxs = nil
}
