// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: pb/funsearch.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a candidate with its hypothesis and quantitative, used as input for Propose.
type Candidate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hypothesis    string                 `protobuf:"bytes,1,opt,name=hypothesis,proto3" json:"hypothesis,omitempty"`
	Quantitative  float64                `protobuf:"fixed64,2,opt,name=quantitative,proto3" json:"quantitative,omitempty"`
	Qualitative   string                 `protobuf:"bytes,3,opt,name=qualitative,proto3" json:"qualitative,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candidate) Reset() {
	*x = Candidate{}
	mi := &file_pb_funsearch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidate) ProtoMessage() {}

func (x *Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_funsearch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidate.ProtoReflect.Descriptor instead.
func (*Candidate) Descriptor() ([]byte, []int) {
	return file_pb_funsearch_proto_rawDescGZIP(), []int{0}
}

func (x *Candidate) GetHypothesis() string {
	if x != nil {
		return x.Hypothesis
	}
	return ""
}

func (x *Candidate) GetQuantitative() float64 {
	if x != nil {
		return x.Quantitative
	}
	return 0
}

func (x *Candidate) GetQualitative() string {
	if x != nil {
		return x.Qualitative
	}
	return ""
}

// The request message for the Propose RPC.
type ProposeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parents       []*Candidate           `protobuf:"bytes,1,rep,name=parents,proto3" json:"parents,omitempty"`
	Specification string                 `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeRequest) Reset() {
	*x = ProposeRequest{}
	mi := &file_pb_funsearch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeRequest) ProtoMessage() {}

func (x *ProposeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_funsearch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeRequest.ProtoReflect.Descriptor instead.
func (*ProposeRequest) Descriptor() ([]byte, []int) {
	return file_pb_funsearch_proto_rawDescGZIP(), []int{1}
}

func (x *ProposeRequest) GetParents() []*Candidate {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *ProposeRequest) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

// The response message for the Propose RPC.
type ProposeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hypothesises  []string               `protobuf:"bytes,1,rep,name=hypothesises,proto3" json:"hypothesises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeResponse) Reset() {
	*x = ProposeResponse{}
	mi := &file_pb_funsearch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeResponse) ProtoMessage() {}

func (x *ProposeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_funsearch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeResponse.ProtoReflect.Descriptor instead.
func (*ProposeResponse) Descriptor() ([]byte, []int) {
	return file_pb_funsearch_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeResponse) GetHypothesises() []string {
	if x != nil {
		return x.Hypothesises
	}
	return nil
}

// The request message for the Observe RPC.
type ObserveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hypothesis    string                 `protobuf:"bytes,1,opt,name=hypothesis,proto3" json:"hypothesis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveRequest) Reset() {
	*x = ObserveRequest{}
	mi := &file_pb_funsearch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveRequest) ProtoMessage() {}

func (x *ObserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_funsearch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveRequest.ProtoReflect.Descriptor instead.
func (*ObserveRequest) Descriptor() ([]byte, []int) {
	return file_pb_funsearch_proto_rawDescGZIP(), []int{3}
}

func (x *ObserveRequest) GetHypothesis() string {
	if x != nil {
		return x.Hypothesis
	}
	return ""
}

// The response message for the Observe RPC.
type ObserveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The original hypothesis from the request, to associate the quantitative correctly.
	Hypothesis    string  `protobuf:"bytes,1,opt,name=hypothesis,proto3" json:"hypothesis,omitempty"`
	Quantitative  float64 `protobuf:"fixed64,2,opt,name=quantitative,proto3" json:"quantitative,omitempty"`
	Qualitative   string  `protobuf:"bytes,3,opt,name=qualitative,proto3" json:"qualitative,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveResponse) Reset() {
	*x = ObserveResponse{}
	mi := &file_pb_funsearch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveResponse) ProtoMessage() {}

func (x *ObserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_funsearch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveResponse.ProtoReflect.Descriptor instead.
func (*ObserveResponse) Descriptor() ([]byte, []int) {
	return file_pb_funsearch_proto_rawDescGZIP(), []int{4}
}

func (x *ObserveResponse) GetHypothesis() string {
	if x != nil {
		return x.Hypothesis
	}
	return ""
}

func (x *ObserveResponse) GetQuantitative() float64 {
	if x != nil {
		return x.Quantitative
	}
	return 0
}

func (x *ObserveResponse) GetQualitative() string {
	if x != nil {
		return x.Qualitative
	}
	return ""
}

var File_pb_funsearch_proto protoreflect.FileDescriptor

const file_pb_funsearch_proto_rawDesc = "" +
	"\n" +
	"\x12pb/funsearch.proto\x12\x13funsearch_worker.pb\"q\n" +
	"\tCandidate\x12\x1e\n" +
	"\n" +
	"hypothesis\x18\x01 \x01(\tR\n" +
	"hypothesis\x12\"\n" +
	"\fquantitative\x18\x02 \x01(\x01R\fquantitative\x12 \n" +
	"\vqualitative\x18\x03 \x01(\tR\vqualitative\"p\n" +
	"\x0eProposeRequest\x128\n" +
	"\aparents\x18\x01 \x03(\v2\x1e.funsearch_worker.pb.CandidateR\aparents\x12$\n" +
	"\rspecification\x18\x02 \x01(\tR\rspecification\"5\n" +
	"\x0fProposeResponse\x12\"\n" +
	"\fhypothesises\x18\x01 \x03(\tR\fhypothesises\"0\n" +
	"\x0eObserveRequest\x12\x1e\n" +
	"\n" +
	"hypothesis\x18\x01 \x01(\tR\n" +
	"hypothesis\"w\n" +
	"\x0fObserveResponse\x12\x1e\n" +
	"\n" +
	"hypothesis\x18\x01 \x01(\tR\n" +
	"hypothesis\x12\"\n" +
	"\fquantitative\x18\x02 \x01(\x01R\fquantitative\x12 \n" +
	"\vqualitative\x18\x03 \x01(\tR\vqualitative2\xbb\x01\n" +
	"\tFUNSEARCH\x12V\n" +
	"\apropose\x12#.funsearch_worker.pb.ProposeRequest\x1a$.funsearch_worker.pb.ProposeResponse\"\x00\x12V\n" +
	"\aobserve\x12#.funsearch_worker.pb.ObserveRequest\x1a$.funsearch_worker.pb.ObserveResponse\"\x00B'Z%funsearch-orchestrator/internal/pb;pbb\x06proto3"

var (
	file_pb_funsearch_proto_rawDescOnce sync.Once
	file_pb_funsearch_proto_rawDescData []byte
)

func file_pb_funsearch_proto_rawDescGZIP() []byte {
	file_pb_funsearch_proto_rawDescOnce.Do(func() {
		file_pb_funsearch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_funsearch_proto_rawDesc), len(file_pb_funsearch_proto_rawDesc)))
	})
	return file_pb_funsearch_proto_rawDescData
}

var file_pb_funsearch_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_funsearch_proto_goTypes = []any{
	(*Candidate)(nil),       // 0: funsearch_worker.pb.Candidate
	(*ProposeRequest)(nil),  // 1: funsearch_worker.pb.ProposeRequest
	(*ProposeResponse)(nil), // 2: funsearch_worker.pb.ProposeResponse
	(*ObserveRequest)(nil),  // 3: funsearch_worker.pb.ObserveRequest
	(*ObserveResponse)(nil), // 4: funsearch_worker.pb.ObserveResponse
}
var file_pb_funsearch_proto_depIdxs = []int32{
	0, // 0: funsearch_worker.pb.ProposeRequest.parents:type_name -> funsearch_worker.pb.Candidate
	1, // 1: funsearch_worker.pb.FUNSEARCH.propose:input_type -> funsearch_worker.pb.ProposeRequest
	3, // 2: funsearch_worker.pb.FUNSEARCH.observe:input_type -> funsearch_worker.pb.ObserveRequest
	2, // 3: funsearch_worker.pb.FUNSEARCH.propose:output_type -> funsearch_worker.pb.ProposeResponse
	4, // 4: funsearch_worker.pb.FUNSEARCH.observe:output_type -> funsearch_worker.pb.ObserveResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_funsearch_proto_init() }
func file_pb_funsearch_proto_init() {
	if File_pb_funsearch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_funsearch_proto_rawDesc), len(file_pb_funsearch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_funsearch_proto_goTypes,
		DependencyIndexes: file_pb_funsearch_proto_depIdxs,
		MessageInfos:      file_pb_funsearch_proto_msgTypes,
	}.Build()
	File_pb_funsearch_proto = out.File
	file_pb_funsearch_proto_goTypes = nil
	file_pb_funsearch_proto_depIdxs = nil
}
