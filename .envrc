echo "ワークスペースを設定します..."

# .direnvにある古いエイリアスは次回起動時にリセットして再設定する方法しかとれない
clear_alias

RPK_FLAG="$PWD/.direnv/rpk_installed"

# rpk のインストールが必要かチェック
if [ ! -f "$RPK_FLAG" ]; then
    export_alias rpk "
        echo 'rpk is not installed. Installing...'
        curl -Lo /tmp/rpk-linux-amd64.zip https://github.com/redpanda-data/redpanda/releases/latest/download/rpk-linux-amd64.zip &&
        mkdir -p ~/.local/bin &&
        export PATH=\"~/.local/bin:\$PATH\" &&
        unzip /tmp/rpk-linux-amd64.zip -d ~/.local/bin/ &&
        rm /tmp/rpk-linux-amd64.zip  # ZIPファイルのクリーンアップ
        echo 'rpk installed successfully.'
        # インストール完了を記録
        touch \"$RPK_FLAG\"
        # .envrc をリロードしてエイリアスを反映
        direnv reload
    "
fi

AWSCLI_FLAG="$PWD/.direnv/awscli_installed"

# awscli のインストールが必要かチェック
if [ ! -f "$AWSCLI_FLAG" ]; then
    export_alias aws "
        echo 'awscli is not installed. Installing...'
        curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o /tmp/awscliv2.zip &&
        unzip /tmp/awscliv2.zip -d /tmp &&
        sudo /tmp/aws/install &&
        rm -rf /tmp/aws /tmp/awscliv2.zip  # ZIPファイルと解凍されたフォルダのクリーンアップ
        echo 'awscli installed successfully.'
        # インストール完了を記録
        touch \"$AWSCLI_FLAG\"
        # .envrc をリロードしてエイリアスを反映
        direnv reload
    "
fi

JULIA_FLAG="$PWD/.direnv/julia_installed"

# Julia のインストールが必要かチェック
if [ ! -f "$JULIA_FLAG" ]; then
    export_alias julia "
        echo 'Julia is not installed. Installing via juliaup...'
        # -y オプションで非対話的にインストール
        curl -fsSL https://install.julialang.org | sh -s -- -y &&
        echo 'Julia installed successfully.'
        # インストール完了を記録
        touch \"$JULIA_FLAG\"
        # .envrc をリロードしてエイリアスとPATHを反映
        direnv reload
    "
fi

# ollamaのコンテナを分ける
export OLLAMA_HOST="http://ollama:11434"

export_alias dcup "
args=\"\$*\"
command=\"wsl bash -c \\\"cd ~/Repositories/mictlan/infra/src/infra/ecosystem && docker compose up \$args\\\"\"
if [ -z \"\$args\" ]; then
    echo \"Needs to specify service\"
    exit 1;
fi
ssh -t workstation \"\$command\"
#" # 自動的に追加される$@を無効化

# Gemini CLIはbunでは動かなかったのでvoltaで入れたnodeを使う
export GOOGLE_CLOUD_PROJECT="gen-lang-client-0573713639"
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
